
Forwarding table  []Entry
-------------------------
  PeerID    // target peer
  NextHop   // next hop in routing
  HopCount  // hops until target
  LastSeen  // relevant for neighbors that can expire
  Pending   // entry not teach'd yet

PeerFilter
----------
* pf = Bloom(self + ∀ PeerID, rnd)
* broadcasted regularily as LEARN

LEARN message
-------------
  Sender
  PeerFilter

  "This is what I know (PeerFilter), want to learn more..."

On LEARN receive:
-----------------
* announce = {∀ PeerID not in PeerFilter}
* sort announce by hops
* len(announce) < limit: announce += {∀ PeerID: pending = true && PeerID != sender}

TEACH message
-------------
  Sender
  Announce []{ PeerID, hops }

On TEACH receive:
-----------------
* add/update entries in FWT
